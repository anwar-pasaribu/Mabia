# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  lane :playstore do
    version_code = increment_version_code(
      gradle_file_path: "composeApp/build.gradle.kts"
    )

    git_commit(
      path: "composeApp/build.gradle.kts",
      message: "Production: Released new build #{version_code} to Google PlayStore"
    )

    gradle(
      task: 'clean bundle',
      build_type: 'Release'
    )

    # upload_to_play_store # Uploads the AAB built in the gradle step above
    upload_to_play_store(
          track: 'production', # production, beta, alpha, internal
          release_status: 'completed',
          aab: 'composeApp/build/outputs/bundle/release/composeApp-release.aab',
          skip_upload_apk: true,
          skip_upload_metadata: true,
          skip_upload_changelogs: true,
          skip_upload_images: true,
          skip_upload_screenshots: true,
          timeout: 600
    )
  end

  lane :internal_playstore do
    version_code = increment_version_code(
      gradle_file_path: "composeApp/build.gradle.kts"
    )

    git_commit(
      path: "composeApp/build.gradle.kts",
      message: "Internal: Released new build #{version_code} to Google PlayStore"
    )

    gradle(
      task: 'clean bundle',
      build_type: 'Release'
    )

    upload_to_play_store(
      track: 'internal',
      release_status: 'completed',
      aab: 'composeApp/build/outputs/bundle/release/composeApp-release.aab',
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
    )
  end

  lane :test_inc do
    version_code = increment_version_code(
      gradle_file_path: "composeApp/build.gradle.kts"
    )

    git_commit(
      path: "./app/build.gradle",
      message: "Fastlane Android: Released new build #{version_code} to Google PlayStore Production track [ci skip]"
    )
  end

  after_all do |lane|
      # This block is called, only if the executed lane was successful

      # slack(
      #   message: "Successfully deployed new App Update."
      # )
      telegram(
        token: ENV['TG_BOT_TOKEN'], # get token from @BotFather
        chat_id: ENV['TG_CHAT_ID'], # https://stackoverflow.com/questions/33858927/how-to-obtain-the-chat-id-of-a-private-telegram-channel
        text: "Mabia lane successful", # Required
        file: "file.pdf", # Optional. Please note, Bots can currently send files of any type of up to 50 MB in size.
        mime_type: "application/pdf" # Required if file exist
      )
  end

  error do |lane, exception|
      # slack(
      #   message: exception.message,
      #   success: false
      # )
      telegram(
        token: ENV['TG_BOT_TOKEN'], # get token from @BotFather
        chat_id: ENV['TG_CHAT_ID'], # https://stackoverflow.com/questions/33858927/how-to-obtain-the-chat-id-of-a-private-telegram-channel
        text: "Mabia lane failed. Msg: #{exception.message}", # Required
      )
  end
end
